<?xml version="1.0"?><object xmlns="http://fxtran.net/#syntax" source-form="FREE" source-width="132" openmp="0" openacc="0"><file name="OpenMPCheckVersion.f90">
      <program-stmt>program <program-N><N n="OMP_VER"><n>omp_ver</n></N></program-N></program-stmt>
      <use-stmt>use <module-N><N n="OMP_LIB"><n>omp_lib</n></N></module-N></use-stmt>
      <implicit-none-stmt>implicit none</implicit-none-stmt>
      <T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>integer</T-N></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>parameter</attribute-N></attribute> :: <EN-decl-LT><EN-decl><EN-N><N n="ZERO"><n>zero</n></N></EN-N> = <init-E><named-E><N n="ICHAR"><n>ichar</n></N><R-LT><parens-R>(<element-LT><element><string-E><S>'0'</S></string-E></element></element-LT>)</parens-R></R-LT></named-E></init-E></EN-decl></EN-decl-LT></T-decl-stmt>
      <T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>integer</T-N></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>parameter</attribute-N></attribute> :: <EN-decl-LT><EN-decl><EN-N><N n="OMPV"><n>ompv</n></N></EN-N> = <init-E><named-E><N n="OPENMP_VERSION"><n>openmp_version</n></N></named-E></init-E></EN-decl></EN-decl-LT></T-decl-stmt>
      <T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>character</T-N></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>dimension</attribute-N><array-spec>(<shape-spec-LT><shape-spec><upper-bound><literal-E><l>24</l></literal-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></attribute>, <attribute><attribute-N>parameter</attribute-N></attribute> :: <EN-decl-LT><EN-decl><EN-N><N n="OMPVER_STR"><n>ompver_str</n></N></EN-N> =<cnt>&amp;</cnt>
      <init-E><array-constructor-E>(/ <ac-value-LT><ac-value><string-E><S>'I'</S></string-E></ac-value>, <ac-value><string-E><S>'N'</S></string-E></ac-value>, <ac-value><string-E><S>'F'</S></string-E></ac-value>, <ac-value><string-E><S>'O'</S></string-E></ac-value>, <ac-value><string-E><S>':'</S></string-E></ac-value>, <ac-value><string-E><S>'O'</S></string-E></ac-value>, <ac-value><string-E><S>'p'</S></string-E></ac-value>, <ac-value><string-E><S>'e'</S></string-E></ac-value>, <ac-value><string-E><S>'n'</S></string-E></ac-value>, <ac-value><string-E><S>'M'</S></string-E></ac-value>, <ac-value><string-E><S>'P'</S></string-E></ac-value>, <ac-value><string-E><S>'-'</S></string-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><string-E><S>'d'</S></string-E></ac-value>, <ac-value><string-E><S>'a'</S></string-E></ac-value>, <ac-value><string-E><S>'t'</S></string-E></ac-value>, <ac-value><string-E><S>'e'</S></string-E></ac-value>, <ac-value><string-E><S>'['</S></string-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><named-E><N n="CHAR"><n>char</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="ZERO"><n>zero</n></N></named-E> <op n="+"><o>+</o></op> <named-E><N n="MOD"><n>mod</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="OMPV"><n>ompv</n></N></named-E><op n="/"><o>/</o></op><literal-E><l>100000</l></literal-E></op-E></element>, <element><literal-E><l>10</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><named-E><N n="CHAR"><n>char</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="ZERO"><n>zero</n></N></named-E> <op n="+"><o>+</o></op> <named-E><N n="MOD"><n>mod</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="OMPV"><n>ompv</n></N></named-E><op n="/"><o>/</o></op><literal-E><l>10000</l></literal-E></op-E></element>, <element><literal-E><l>10</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><named-E><N n="CHAR"><n>char</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="ZERO"><n>zero</n></N></named-E> <op n="+"><o>+</o></op> <named-E><N n="MOD"><n>mod</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="OMPV"><n>ompv</n></N></named-E><op n="/"><o>/</o></op><literal-E><l>1000</l></literal-E></op-E></element>, <element><literal-E><l>10</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><named-E><N n="CHAR"><n>char</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="ZERO"><n>zero</n></N></named-E> <op n="+"><o>+</o></op> <named-E><N n="MOD"><n>mod</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="OMPV"><n>ompv</n></N></named-E><op n="/"><o>/</o></op><literal-E><l>100</l></literal-E></op-E></element>, <element><literal-E><l>10</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><named-E><N n="CHAR"><n>char</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="ZERO"><n>zero</n></N></named-E> <op n="+"><o>+</o></op> <named-E><N n="MOD"><n>mod</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="OMPV"><n>ompv</n></N></named-E><op n="/"><o>/</o></op><literal-E><l>10</l></literal-E></op-E></element>, <element><literal-E><l>10</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E></ac-value>,<cnt>&amp;</cnt>
         <ac-value><named-E><N n="CHAR"><n>char</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="ZERO"><n>zero</n></N></named-E> <op n="+"><o>+</o></op> <named-E><N n="MOD"><n>mod</n></N><R-LT><parens-R>(<element-LT><element><op-E><named-E><N n="OMPV"><n>ompv</n></N></named-E><op n="/"><o>/</o></op><literal-E><l>1</l></literal-E></op-E></element>, <element><literal-E><l>10</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E></ac-value>, <ac-value><string-E><S>']'</S></string-E></ac-value></ac-value-LT> /)</array-constructor-E></init-E></EN-decl></EN-decl-LT></T-decl-stmt>
      <print-stmt>print <format>*</format>, <output-item-LT><output-item><named-E><N n="OMPVER_STR"><n>ompver_str</n></N></named-E></output-item></output-item-LT></print-stmt>
      <end-program-stmt>end program <program-N><N n="OMP_VER"><n>omp_ver</n></N></program-N></end-program-stmt>
</file></object>
