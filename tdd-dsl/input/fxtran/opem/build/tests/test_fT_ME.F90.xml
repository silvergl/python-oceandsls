<?xml version="1.0"?><object xmlns="http://fxtran.net/#syntax" source-form="FREE" source-width="132" openmp="0" openacc="0"><file name="test_fT_ME.F90">
<subroutine-stmt>SUBROUTINE <subroutine-N><N n="TEST_FT_ME"><n>test_fT_ME</n></N></subroutine-N>(<dummy-arg-LT></dummy-arg-LT>)</subroutine-stmt>
 <use-stmt>use <module-N><N n="CFO_EXAMPLE"><n>cfo_example</n></N></module-N></use-stmt>
 <use-stmt>use <module-N><N n="FUNIT"><n>funit</n></N></module-N></use-stmt>

 <T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>integer</T-N></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>PARAMETER</attribute-N></attribute> :: <EN-decl-LT><EN-decl><EN-N><N n="DP"><n>dp</n></N></EN-N> = <init-E><named-E><N n="KIND"><n>KIND</n></N> <R-LT><parens-R>( <element-LT><element><literal-E><l>0D0</l></literal-E></element></element-LT> )</parens-R></R-LT></named-E></init-E></EN-decl></EN-decl-LT></T-decl-stmt>

 <T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>real</T-N> <K-selector>( <K-spec><named-E><N n="DP"><n>dp</n></N></named-E></K-spec> )</K-selector></intrinsic-T-spec></_T-spec_> :: <EN-decl-LT><EN-decl><EN-N><N n="XINTERCEPT"><n>xIntercept</n></N></EN-N> = <init-E><op-E><literal-E><l>283D0</l></literal-E> <op n="/"><o>/</o></op> <literal-E><l>19D0</l></literal-E></op-E></init-E></EN-decl></EN-decl-LT></T-decl-stmt>
 <T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>real</T-N> <K-selector>( <K-spec><named-E><N n="DP"><n>dp</n></N></named-E></K-spec> )</K-selector></intrinsic-T-spec></_T-spec_> :: <EN-decl-LT><EN-decl><EN-N><N n="YINTERCEPT"><n>yIntercept</n></N></EN-N> = <init-E><op-E><op n="-"><o>-</o></op> <parens-E>( <op-E><literal-E><l>283D0</l></literal-E> <op n="/"><o>/</o></op> <literal-E><l>520D0</l></literal-E></op-E> )</parens-E></op-E></init-E></EN-decl></EN-decl-LT></T-decl-stmt>

 
<cpp>#line 12 &quot;/home/sgu/IdeaProjects/python-oceandsls/tdd-dsl/input/tdd_dev/UVic_example_opem/tests/test_fT_ME.pf&quot;</cpp>
  <call-stmt>call <procedure-designator><named-E><N n="ASSERTEQUAL"><n>assertEqual</n></N></named-E></procedure-designator>( <arg-spec><arg><literal-E><l>0D0</l></literal-E></arg>, <arg><named-E><N n="FT_ME"><n>fT_ME</n></N> <R-LT><parens-R>( <element-LT><element><named-E><N n="XINTERCEPT"><n>xIntercept</n></N></named-E></element></element-LT> )</parens-R></R-LT></named-E></arg>, <arg><arg-N n="MESSAGE"><k>message</k></arg-N>=<string-E><S>'fails x-Intercept at 14.89D0'</S></string-E></arg>, <arg><arg-N n="TOLERANCE"><k>tolerance</k></arg-N>=<literal-E><l>1D-12</l></literal-E></arg>, <cnt>&amp;</cnt>
 <cnt>&amp;</cnt> <arg><arg-N n="LOCATION"><k>location</k></arg-N>=<named-E><N n="SOURCELOCATION"><n>SourceLocation</n></N><R-LT><parens-R>( <cnt>&amp;</cnt>
 <cnt>&amp;</cnt> <element-LT><element><string-E><S>'test_fT_ME.pf'</S></string-E></element>, <cnt>&amp;</cnt>
 <cnt>&amp;</cnt> <element><literal-E><l>12</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></arg></arg-spec> )</call-stmt>
  <if-stmt>if (<condition-E><named-E><N n="ANYEXCEPTIONS"><n>anyExceptions</n></N><R-LT><parens-R>(<element-LT></element-LT>)</parens-R></R-LT></named-E></condition-E>) <action-stmt><return-stmt>return</return-stmt></action-stmt></if-stmt>
<cpp>#line 13 &quot;/home/sgu/IdeaProjects/python-oceandsls/tdd-dsl/input/tdd_dev/UVic_example_opem/tests/test_fT_ME.pf&quot;</cpp>
 
<cpp>#line 14 &quot;/home/sgu/IdeaProjects/python-oceandsls/tdd-dsl/input/tdd_dev/UVic_example_opem/tests/test_fT_ME.pf&quot;</cpp>
  <call-stmt>call <procedure-designator><named-E><N n="ASSERTEQUAL"><n>assertEqual</n></N></named-E></procedure-designator>( <arg-spec><arg><named-E><N n="YINTERCEPT"><n>yIntercept</n></N></named-E></arg>, <arg><op-E><named-E><N n="FT_ME"><n>fT_ME</n></N> <R-LT><parens-R>( <element-LT><element><literal-E><l>0D0</l></literal-E></element></element-LT> )</parens-R></R-LT></named-E> <op n="*"><o>*</o></op> <named-E><N n="FOO"><n>foo</n></N> <R-LT><parens-R>( <element-LT><element><literal-E><l>0D0</l></literal-E></element></element-LT> )</parens-R></R-LT></named-E></op-E></arg>, <arg><arg-N n="MESSAGE"><k>message</k></arg-N>=<string-E><S>'fails y-Intercept at -54.42D-2'</S></string-E></arg>, <arg><arg-N n="TOLERANCE"><k>tolerance</k></arg-N>=<literal-E><l>1D-12</l></literal-E></arg>, <cnt>&amp;</cnt>
 <cnt>&amp;</cnt> <arg><arg-N n="LOCATION"><k>location</k></arg-N>=<named-E><N n="SOURCELOCATION"><n>SourceLocation</n></N><R-LT><parens-R>( <cnt>&amp;</cnt>
 <cnt>&amp;</cnt> <element-LT><element><string-E><S>'test_fT_ME.pf'</S></string-E></element>, <cnt>&amp;</cnt>
 <cnt>&amp;</cnt> <element><literal-E><l>14</l></literal-E></element></element-LT>)</parens-R></R-LT></named-E></arg></arg-spec> )</call-stmt>
  <if-stmt>if (<condition-E><named-E><N n="ANYEXCEPTIONS"><n>anyExceptions</n></N><R-LT><parens-R>(<element-LT></element-LT>)</parens-R></R-LT></named-E></condition-E>) <action-stmt><return-stmt>return</return-stmt></action-stmt></if-stmt>
<cpp>#line 15 &quot;/home/sgu/IdeaProjects/python-oceandsls/tdd-dsl/input/tdd_dev/UVic_example_opem/tests/test_fT_ME.pf&quot;</cpp>
<end-subroutine-stmt>END SUBROUTINE <subroutine-N><N n="TEST_FT_ME"><n>test_fT_ME</n></N></subroutine-N></end-subroutine-stmt>
<module-stmt>module <module-N><N n="WRAPTEST_FT_ME"><n>Wraptest_fT_ME</n></N></module-N></module-stmt>
   <use-stmt>use <module-N><N n="FUNIT"><n>FUnit</n></N></module-N></use-stmt>
   <implicit-none-stmt>implicit none</implicit-none-stmt>
   <private-stmt>private</private-stmt>

<contains-stmt>contains</contains-stmt>


<end-module-stmt>end module <module-N><N n="WRAPTEST_FT_ME"><n>Wraptest_fT_ME</n></N></module-N></end-module-stmt>

<function-stmt>function <function-N><N n="TEST_FT_ME_SUITE"><n>test_fT_ME_suite</n></N></function-N>(<dummy-arg-LT></dummy-arg-LT>) <result-spec>result(<N n="SUITE"><n>suite</n></N>)</result-spec></function-stmt>
   <use-stmt>use <module-N><N n="FUNIT"><n>FUnit</n></N></module-N></use-stmt>
   <use-stmt>use <module-N><N n="WRAPTEST_FT_ME"><n>Wraptest_fT_ME</n></N></module-N></use-stmt>
   <implicit-none-stmt>implicit none</implicit-none-stmt>
   <T-decl-stmt><_T-spec_><derived-T-spec>type (<T-N><N n="TESTSUITE"><n>TestSuite</n></N></T-N>)</derived-T-spec></_T-spec_> :: <EN-decl-LT><EN-decl><EN-N><N n="SUITE"><n>suite</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>

   <T-decl-stmt><_T-spec_><derived-T-spec>class (<T-N><N n="TEST"><n>Test</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>allocatable</attribute-N></attribute> :: <EN-decl-LT><EN-decl><EN-N><N n="T"><n>t</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>

   <external-stmt>external <EN-decl-LT><EN-decl><EN-N><N n="TEST_FT_ME"><n>test_fT_ME</n></N></EN-N></EN-decl></EN-decl-LT></external-stmt>


   <a-stmt><E-1><named-E><N n="SUITE"><n>suite</n></N></named-E></E-1> <a>=</a> <E-2><named-E><N n="TESTSUITE"><n>TestSuite</n></N><R-LT><parens-R>(<element-LT><element><string-E><S>'test_fT_ME_suite'</S></string-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>

   <if-stmt>if(<condition-E><named-E><N n="ALLOCATED"><n>allocated</n></N><R-LT><parens-R>(<element-LT><element><named-E><N n="T"><n>t</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></condition-E>) <action-stmt><deallocate-stmt>deallocate(<arg-spec><arg><named-E><N n="T"><n>t</n></N></named-E></arg></arg-spec>)</deallocate-stmt></action-stmt></if-stmt>
   <allocate-stmt>allocate(<arg-spec><arg><named-E><N n="T"><n>t</n></N></named-E></arg>, <arg><arg-N n="SOURCE"><k>source</k></arg-N>=<named-E><N n="TESTMETHOD"><n>TestMethod</n></N><R-LT><parens-R>(<element-LT><element><string-E><S>'test_fT_ME'</S></string-E></element>, <cnt>&amp;</cnt>
      <element><named-E><N n="TEST_FT_ME"><n>test_fT_ME</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></arg></arg-spec>)</allocate-stmt>
   <call-stmt>call <procedure-designator><named-E><N n="SUITE"><n>suite</n></N><R-LT><component-R>%<ct>addTest</ct></component-R></R-LT></named-E></procedure-designator>(<arg-spec><arg><named-E><N n="T"><n>t</n></N></named-E></arg></arg-spec>)</call-stmt>


<end-function-stmt>end function <function-N><N n="TEST_FT_ME_SUITE"><n>test_fT_ME_suite</n></N></function-N></end-function-stmt>

</file></object>
